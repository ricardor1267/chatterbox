# Dockerfile with flexible dependency resolution
FROM nvidia/cuda:12.1.0-cudnn8-runtime-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PATH=/usr/local/cuda/bin:${PATH} \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3-pip \
    python3.11-dev \
    git \
    wget \
    libsndfile1 \
    ffmpeg \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Upgrade pip
RUN python3 -m pip install --upgrade pip setuptools wheel

# Set working directory
WORKDIR /workspace

# Install PyTorch first (most important dependency)
RUN pip install --no-cache-dir \
    torch==2.6.0 \
    torchaudio==2.6.0

# Install other core dependencies
RUN pip install --no-cache-dir \
    numpy>=1.24.0 \
    transformers \
    diffusers \
    librosa \
    safetensors \
    runpod

# Copy project files
COPY pyproject.toml /workspace/
COPY src /workspace/src

# Install chatterbox without strict version requirements
# This allows pip to resolve dependencies flexibly
RUN pip install --no-cache-dir -e . --no-deps && \
    pip install --no-cache-dir \
    resemble-perth \
    conformer \
    s3tokenizer \
    spacy-pkuseg \
    pykakasi

# Install russian-text-stresser
RUN pip install --no-cache-dir git+https://github.com/Vuizur/add-stress-to-epub || \
    echo "Warning: russian-text-stresser installation failed"

# Copy the handler
COPY rp_handler.py /workspace/rp_handler.py

# Pre-download models
RUN echo "Downloading models..." && \
    python3 -c "from chatterbox.mtl_tts import ChatterboxMultilingualTTS; ChatterboxMultilingualTTS.from_pretrained(device='cpu')" || \
    echo "Warning: Model download failed, will download on first use"

# Set the handler as the entrypoint
CMD ["python3", "-u", "/workspace/rp_handler.py"]
